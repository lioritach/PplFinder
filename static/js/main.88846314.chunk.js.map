{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","redux/features/Slice.js","hooks/usePeopleFetch.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","theme/ThemeProvider.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","components/NavBar/NavBar.js","AppRouter.js","redux/store.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","Slice","createSlice","name","initialState","data","reducers","getNat","state","action","payload","actions","selectNat","nat","usePeopleFetch","useState","users","setUsers","filteredUsers","isLoading","setIsLoading","useSelector","fetchUsers","a","axios","get","response","results","useEffect","isChecked","label","onChange","value","dispatch","useDispatch","natData","FormControlLabel","control","Checkbox","checked","localStorage","setItem","JSON","stringify","map","userNat","console","log","UserList","FavoriteMessage","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","hoveredUserId","setHoveredUserId","filteredCountries","setfilteredCountries","click","show","setShow","parse","getItem","favorites","setFavorites","favoriteMessage","setFavoriteMessage","countrys","Array","from","Set","userCountry","usersFavorite","login","uuid","filterByCountry","handleMouseEnter","index","handleMouseLeave","handleFavorite","user","includes","newList","filter","deletedUser","prevState","concat","country","indexOf","filteredData","usr","Toast","onClose","delay","autohide","Body","onMouseEnter","onMouseLeave","src","picture","large","alt","title","first","last","email","location","street","number","city","isClicked","IconButton","onClick","Home","Content","Header","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","Favorites","local","setLocal","saved","length","NavBar","setValue","allTabs","AppBar","position","style","top","Tabs","_e","newValue","indicatorColor","textColor","Tab","component","Link","to","path","AppRouter","exact","combineReducers","natReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.88846314.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const Slice = createSlice({\r\n  name: \"nat\",\r\n  initialState: {\r\n    data: \"initialValue\",\r\n  },\r\n  reducers: {\r\n    getNat: (state, action) => {\r\n      state.data = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getNat } = Slice.actions;\r\nexport const selectNat = (state) => state.nat.data;\r\n\r\nexport default Slice.reducer;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectNat } from \"redux/features/Slice\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFiltered] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const nat = useSelector(selectNat);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=100&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n    return;\r\n  }\r\n\r\n  return { users, isLoading, filteredUsers, fetchUsers };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getNat } from \"redux/features/Slice\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const { users } = usePeopleFetch();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getNat({ natData: \"initialValue\" }));\r\n  }, [value]);\r\n\r\n  const handleChange = () => {\r\n    localStorage.setItem(\"nat\", JSON.stringify(value));\r\n    // check if the value of the checkbox is equal to nat in users, if true set the nat in the redux\r\n    users.map((userNat) => {\r\n      if (value === userNat.nat) {\r\n        dispatch(\r\n          getNat({\r\n            natData: value,\r\n          })\r\n        );\r\n      } else {\r\n        console.log(\"nat not found\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={isChecked}\r\n            onChange={() => handleChange(value)}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const FavoriteMessage = styled.div`\r\n  margin: auto;\r\n  font-size: 15px;\r\n  border: 1px solid #fff;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin: auto;\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 1px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectNat } from \"redux/features/Slice\";\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [filteredCountries, setfilteredCountries] = useState([]);\r\n  const [click, setclick] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [favorites, setFavorites] = useState(\r\n    JSON.parse(localStorage.getItem(\"fav\")) || []\r\n  );\r\n  const [favoriteMessage, setFavoriteMessage] = useState(\"\");\r\n  const userNat =\r\n    useSelector(selectNat) === null ? \"initialValue\" : useSelector(selectNat);\r\n\r\n  const countrys = Array.from(new Set(users.map((userCountry) => userCountry?.nat)));\r\n  const usersFavorite = favorites.map((name) => name.login.uuid);\r\n\r\n  useEffect(() => {\r\n    filterByCountry(users, userNat.natData);\r\n  }, [userNat.natData]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"fav\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const handleFavorite = (user) => {\r\n    setShow(true);\r\n    //when the user click again it'll check if the user is exist in favorites, if yes it'll delete him\r\n    if (usersFavorite.includes(user.login.uuid)) {\r\n      const newList = favorites.filter(\r\n        (deletedUser) => deletedUser.login.uuid !== user.login.uuid\r\n      );\r\n      setFavorites(newList);\r\n      setFavoriteMessage(\"The user has been removed from the favorites list!\");\r\n    } else {\r\n      // save user to localstorage\r\n      setFavorites((prevState) => prevState.concat(user));\r\n      setFavoriteMessage(\"The user has been added to the favorites list!\");\r\n      localStorage.setItem(\"fav\", JSON.stringify(favorites));\r\n    }\r\n  };\r\n\r\n  const filterByCountry = (data, country) => {\r\n    if (countrys.indexOf(country) !== -1) {\r\n      let filteredData = data.filter((usr) => usr.nat === country);\r\n      setfilteredCountries((prevState) => prevState.concat(filteredData));\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        {/* Bonus task, dynamic checkbox's */}\r\n        {countrys.map((country, index) => {\r\n          return <CheckBox key={index} value={country} label={country} />;\r\n        })}\r\n      </S.Filters>\r\n      <S.FavoriteMessage>\r\n        {/* Favorites popup message */}\r\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n          <Toast.Body>{favoriteMessage}</Toast.Body>\r\n        </Toast>\r\n      </S.FavoriteMessage>\r\n      <S.List>\r\n        {/* show all users when checkbox's is unchecked */}\r\n        {userNat.natData === \"initialValue\"\r\n          ? users.map((user, index) => {\r\n              return (\r\n                <S.User\r\n                  key={index}\r\n                  onMouseEnter={() => handleMouseEnter(index)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                >\r\n                  <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                  <S.UserInfo>\r\n                    <Text size=\"22px\" bold>\r\n                      {user?.name.title} {user?.name.first} {user?.name.last}\r\n                    </Text>\r\n                    <Text size=\"14px\">{user?.email}</Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.street.number} {user?.location.street.name}\r\n                    </Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.city} {user?.location.country}\r\n                    </Text>\r\n                  </S.UserInfo>\r\n                  <S.IconButtonWrapper\r\n                    isVisible={\r\n                      index === hoveredUserId || usersFavorite.includes(user.login.uuid)\r\n                    }\r\n                    isClicked={click}\r\n                  >\r\n                    <IconButton onClick={() => handleFavorite(user)}>\r\n                      <FavoriteIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </S.IconButtonWrapper>\r\n                </S.User>\r\n              );\r\n            })\r\n          : filteredCountries.map((user, index) => {\r\n              return (\r\n                <S.User\r\n                  key={index}\r\n                  onMouseEnter={() => handleMouseEnter(index)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                >\r\n                  <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                  <S.UserInfo>\r\n                    <Text size=\"22px\" bold>\r\n                      {user?.name.title} {user?.name.first} {user?.name.last}\r\n                    </Text>\r\n                    <Text size=\"14px\">{user?.email}</Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.street.number} {user?.location.street.name}\r\n                    </Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.city} {user?.location.country}\r\n                    </Text>\r\n                  </S.UserInfo>\r\n                  <S.IconButtonWrapper\r\n                    isVisible={\r\n                      index === hoveredUserId || usersFavorite.includes(user.login.uuid)\r\n                    }\r\n                  >\r\n                    <IconButton onClick={() => handleFavorite(user)}>\r\n                      <FavoriteIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </S.IconButtonWrapper>\r\n                </S.User>\r\n              );\r\n            })}\r\n\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 170px);\r\n  margin-block-start: 80px;\r\n  margin-left: 20px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n  const [local, setLocal] = useState([]);\r\n  const [favorites, setFavorites] = useState(\r\n    JSON.parse(localStorage.getItem(\"fav\")) || []\r\n  );\r\n  const usersFavorite = favorites.map((name) => name.login.uuid);\r\n\r\n  useEffect(() => {\r\n    saved();\r\n  }, []);\r\n\r\n  const saved = () => {\r\n    setLocal((prevState) => prevState.concat(JSON.parse(localStorage.getItem(\"fav\"))));\r\n  };\r\n\r\n  console.log(favorites);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"fav\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const handleFavorite = (user) => {\r\n    //when the user click again it'll check if the user is exist in favorites, if yes it'll delete him\r\n    if (usersFavorite.includes(user.login.uuid)) {\r\n      const newList = favorites.filter(\r\n        (deletedUser) => deletedUser.login.uuid !== user.login.uuid\r\n      );\r\n      setFavorites(newList);\r\n    } else {\r\n      setFavorites((prevState) => prevState.concat(user));\r\n      localStorage.setItem(\"fav\", JSON.stringify(favorites));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.List>\r\n        <Text>Favorites</Text>\r\n        {local.length === 0 ? <Text>אין עדין משתמשים מועדפים</Text> : null}\r\n        {local.map((user, index) => {\r\n          return (\r\n            <S.User key={index}>\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={usersFavorite.includes(user.login.uuid)}>\r\n                <IconButton onClick={() => handleFavorite(user)}>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Favorites from \"pages/Favorites/Favorites\";\r\nimport { Link, Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport { Home } from \"pages/Home/style\";\r\nimport { UserList } from \"components/UserList/style\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  // Tabs\r\n  const allTabs = [\"/\", \"/favorites\"];\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} component={Link} to={allTabs[0]} />\r\n        <Tab label=\"Favorites\" index={1} component={Link} to={allTabs[1]} />\r\n      </Tabs>\r\n      <Switch>\r\n        <Route path={allTabs[1]} />\r\n        <Route path={allTabs[0]} />\r\n      </Switch>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport Favorites from \"pages/Favorites/Favorites\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport { combineReducers } from \"redux\";\r\nimport natReducer from \"./features/Slice\";\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst reducers = combineReducers({\r\n  nat: natReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root1\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nlet persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <AppRouter />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}